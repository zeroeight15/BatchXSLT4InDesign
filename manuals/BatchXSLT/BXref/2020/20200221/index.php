<?php/** * THIS SOFTWARE IS PROVIDED AS IS AND ANY EXPRESSED OR IMPLIED * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE * DISCLAIMED.  IN NO EVENT SHALL THE PRODUCER OR * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF * SUCH DAMAGE.THE PRODUCER:Andreas Imhofwww.aiedv.chShort Description: Return a HTML version from a flipbook XML fileDescription: Return a HTML version from a flipbook XML file. Optionally set the maximum number of pages to return.Version: 1Version date: 20140808*/$user = "";		// access protected directories$pwd = "";		// do not protect entire directories or flip books will not work$unleashedUNLOCK = 123456;	// the master unleash code$unleashed = 0;		// 1 = show entire document. 0 to apply given restrictions$maxpages = 5;		// Maximum number of pages to return: 0 for all pages, otherwise a max number of pages to process$noarticles = 0;	// suppress all articles and mouse overs: 0 = do suppress, otherwise show articles$nopdf = 1;			// suppress all PDF: 0 = do suppress, otherwise show PDF$nopagepdf = 0;		// suppress pages PDF: 0 = do suppress, otherwise show PDF$nodocpdf = 0;		// suppress document PDF: 0 = do suppress, otherwise show PDF$xml_filename = "BXref_20200221_V400046.xml";	// the source XML file$htm_filename = "BXref_20200221_V400046.htm";	// the full HTML file containig all pages$xsl_filename = "../../../XSLCSS/flipbook.xsl";	// the XSL file to use// check for unleashif (isset($_GET['unleashed']) && is_numeric($_GET['unleashed']) && (intval($_GET['unleashed']) === $unleashedUNLOCK)) $unleashed = 1;if (isset($_POST['unleashed']) && is_numeric($_POST['unleashed']) && (intval($_POST['unleashed']) === $unleashedUNLOCK)) $unleashed = 1;// get the number of pages to processif ($maxpages <= 0) {	// allow override only if not preset	if (isset($_GET['xp']) && is_numeric($_GET['xp'])) $maxpages = intval($_GET['xp']);	if (isset($_GET['maxpages']) && is_numeric($_GET['maxpages'])) $maxpages = intval($_GET['maxpages']);}if (isset($_GET['noarticles']) && is_numeric($_GET['noarticles'])) $noarticles = intval($_GET['noarticles']);if (isset($_GET['nopdf']) && is_numeric($_GET['nopdf'])) $nopdf = intval($_GET['nopdf']);if (isset($_GET['nopagepdf']) && is_numeric($_GET['nopagepdf'])) $nopagepdf = intval($_GET['nopagepdf']);if (isset($_GET['nodocpdf']) && is_numeric($_GET['nodocpdf'])) $nodocpdf = intval($_GET['nodocpdf']);$context = null;if (($user != "") || ($pwd != "")) $context = stream_context_create(array ('http' => array ('header'=>'Authorization: Basic ' . base64_encode("$user:$pwd")."\r\n")));// test if entire HTML file is requested: do no transformif (($unleashed == 1) || (($maxpages <= 0) && ($noarticles <= 0) && ($nopdf <= 0) && ($nopagepdf <= 0) && ($nodocpdf <= 0))) {	echo file_get_contents($htm_filename, false, $context);	exit;}// extract the requested number of pages$xsl = new XSLTProcessor();$xsldoc = new DOMDocument();$xsldoc->load($xsl_filename);$xsl->importStyleSheet($xsldoc);$xmldoc = new DOMDocument();$xmldoc->load($xml_filename);$xsl->setParameter('',"maxpages",$maxpages);$xsl->setParameter('',"noarticles",$noarticles);$xsl->setParameter('',"nopdf",$nopdf);$xsl->setParameter('',"nopagepdf",$nopagepdf);$xsl->setParameter('',"nodocpdf",$nodocpdf);// return the HTML resultecho $xsl->transformToXML($xmldoc);?>